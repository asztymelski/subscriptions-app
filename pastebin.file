# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
    
    ###############################################



jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v2
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Install dependencies
        run: npm install    
      - name: Test
        run: npm test
        env:
          CI: true
      - name: Generate build
        run: npm run build
      # Share artifact inside workflow
      - name: Share artifact inside workflow
        uses: actions/upload-artifact@v1
        with:
          name: react-github-actions-build
          path: build

#################
#!/usr/bin/bash

    set -feuo pipefail

    length="$(jq '. | length' $WORKSPACE/externalRemotes.config.json)"
    echo "There is $length remote repositories to clone"
    
    for (( i=0; i<$length; i++ ))
    
    do
    REPO=$(jq -r ".[$i].repo_url" externalRemotes.config.json | sed 's|https://github.com/org/||')"
    PATH=$WORKSPACE/host-app/out/$REPO"
    TAG=$(jq -r ".[$i].version" externalRemotes.config.json)"
    TOKEN=$(jq -r ".[$i].repo_url" externalRemotes.config.json | sed 's|https://github.com/org/beacon-frontend-||'|tr '[:lower:]' '[:upper:]')_TOKEN"
    
    echo "Cloning $REPO to directory $PATH"
    git clone --branch $TAG https://"$TOKEN"@github.com/org/"$REPO" $PATH
    
    echo "Building and testing app"
    npm ci --prefix $PATH
    npm run build --prefix $PATH
    npm test --prefix $PATH
    
    echo "Making directory $WORKSPACE/host-app/out/$REPO"
    mkdir -p $WORKSPACE/host-app/out/$REPO
    
    echo "Copying build artifacts from $PATH/build/ to $WORKSPACE/host-app/out/$REPO
    cp -R $PATH/build/* $WORKSPACE/host-app/out/$REPO
    
    done


  - name: Cleanup Git Config
    run: git config --local --unset-all http.extraheader
    continue-on-error: true
